package binary

// This file contains the metadata definitions for all managed binary components.
// It serves as the single source of truth for download URLs, filenames, and other details.

// defaultKnownBinaryDetails is a map containing the metadata specifications for each binary component.
// The key is the component name constant (e.g., ComponentEtcd) defined in binary_types.go.
var defaultKnownBinaryDetails = map[string]BinaryDetailSpec{
	ComponentEtcd: {
		BinaryType:           ETCD,
		URLTemplate:          "https://github.com/coreos/etcd/releases/download/{{.Version}}/etcd-{{.Version}}-{{.OS}}-{{.Arch}}.tar.gz",
		CNURLTemplate:        "https://kubernetes-release.pek3b.qingstor.com/etcd/release/download/{{.Version}}/etcd-{{.Version}}-{{.OS}}-{{.Arch}}.tar.gz",
		FileNameTemplate:     "etcd-{{.Version}}-{{.OS}}-{{.Arch}}.tar.gz",
		IsArchive:            true,
		DefaultOS:            "linux",
		ExpectedChecksum:     "dummy-etcd-checksum-val",
		ExpectedChecksumType: "sha256",
	},
	ComponentKubeadm: {
		BinaryType:       KUBE,
		URLTemplate:      "https://dl.k8s.io/release/{{.Version}}/bin/{{.OS}}/{{.Arch}}/kubeadm",
		CNURLTemplate:    "https://kubernetes-release.pek3b.qingstor.com/release/{{.Version}}/bin/{{.OS}}/{{.Arch}}/kubeadm",
		FileNameTemplate: "kubeadm",
		IsArchive:        false,
		DefaultOS:        "linux",
	},
	ComponentKubelet: {
		BinaryType:       KUBE,
		URLTemplate:      "https://dl.k8s.io/release/{{.Version}}/bin/{{.OS}}/{{.Arch}}/kubelet",
		CNURLTemplate:    "https://kubernetes-release.pek3b.qingstor.com/release/{{.Version}}/bin/{{.OS}}/{{.Arch}}/kubelet",
		FileNameTemplate: "kubelet",
		IsArchive:        false,
		DefaultOS:        "linux",
	},
	ComponentKubectl: {
		BinaryType:       KUBE,
		URLTemplate:      "https://dl.k8s.io/release/{{.Version}}/bin/{{.OS}}/{{.Arch}}/kubectl",
		CNURLTemplate:    "https://kubernetes-release.pek3b.qingstor.com/release/{{.Version}}/bin/{{.OS}}/{{.Arch}}/kubectl",
		FileNameTemplate: "kubectl",
		IsArchive:        false,
		DefaultOS:        "linux",
	},
	ComponentKubeProxy: {
		BinaryType:       KUBE,
		URLTemplate:      "https://dl.k8s.io/release/{{.Version}}/bin/{{.OS}}/{{.Arch}}/kube-proxy",
		CNURLTemplate:    "https://kubernetes-release.pek3b.qingstor.com/release/{{.Version}}/bin/{{.OS}}/{{.Arch}}/kube-proxy",
		FileNameTemplate: "kube-proxy",
		IsArchive:        false,
		DefaultOS:        "linux",
	},
	ComponentKubeScheduler: {
		BinaryType:       KUBE,
		URLTemplate:      "https://dl.k8s.io/release/{{.Version}}/bin/{{.OS}}/{{.Arch}}/kube-scheduler",
		CNURLTemplate:    "https://kubernetes-release.pek3b.qingstor.com/release/{{.Version}}/bin/{{.OS}}/{{.Arch}}/kube-scheduler",
		FileNameTemplate: "kube-scheduler",
		IsArchive:        false,
		DefaultOS:        "linux",
	},
	ComponentKubeControllerManager: {
		BinaryType:       KUBE,
		URLTemplate:      "https://dl.k8s.io/release/{{.Version}}/bin/{{.OS}}/{{.Arch}}/kube-controller-manager",
		CNURLTemplate:    "https://kubernetes-release.pek3b.qingstor.com/release/{{.Version}}/bin/{{.OS}}/{{.Arch}}/kube-controller-manager",
		FileNameTemplate: "kube-controller-manager",
		IsArchive:        false,
		DefaultOS:        "linux",
	},
	ComponentKubeApiServer: {
		BinaryType:       KUBE,
		URLTemplate:      "https://dl.k8s.io/release/{{.Version}}/bin/{{.OS}}/{{.Arch}}/kube-apiserver",
		CNURLTemplate:    "https://kubernetes-release.pek3b.qingstor.com/release/{{.Version}}/bin/{{.OS}}/{{.Arch}}/kube-apiserver",
		FileNameTemplate: "kube-apiserver",
		IsArchive:        false,
		DefaultOS:        "linux",
	},
	ComponentKubeCNI: {
		BinaryType:       CNI,
		URLTemplate:      "https://github.com/containernetworking/plugins/releases/download/{{.Version}}/cni-plugins-{{.OS}}-{{.Arch}}-{{.Version}}.tgz",
		CNURLTemplate:    "https://containernetworking.pek3b.qingstor.com/plugins/releases/download/{{.Version}}/cni-plugins-{{.OS}}-{{.Arch}}-{{.Version}}.tgz",
		FileNameTemplate: "cni-plugins-{{.OS}}-{{.Arch}}-{{.Version}}.tgz",
		IsArchive:        true,
		DefaultOS:        "linux",
	},
	ComponentHelm: {
		BinaryType:       HELM,
		URLTemplate:      "https://get.helm.sh/helm-{{.Version}}-{{.OS}}-{{.Arch}}.tar.gz",
		CNURLTemplate:    "https://kubernetes-helm.pek3b.qingstor.com/linux-{{.Arch}}/{{.Version}}/helm-{{.Version}}-{{.OS}}-{{.Arch}}.tar.gz",
		FileNameTemplate: "helm-{{.Version}}-{{.OS}}-{{.Arch}}.tar.gz",
		IsArchive:        true,
		DefaultOS:        "linux",
	},
	ComponentDocker: {
		BinaryType:          DOCKER,
		URLTemplate:         "https://download.docker.com/linux/static/stable/{{.ArchAlias}}/docker-{{.VersionNoV}}.tgz",
		CNURLTemplate:       "https://mirrors.aliyun.com/docker-ce/linux/static/stable/{{.ArchAlias}}/docker-{{.VersionNoV}}.tgz",
		FileNameTemplate:    "docker-{{.VersionNoV}}.tgz",
		IsArchive:           true,
		DefaultOS:           "linux",
		ComponentNameForDir: "docker",
	},
	ComponentCriDockerd: {
		BinaryType:          CRIDOCKERD,
		URLTemplate:         "https://github.com/Mirantis/cri-dockerd/releases/download/v{{.VersionNoV}}/cri-dockerd-{{.VersionNoV}}.{{.Arch}}.tgz",
		CNURLTemplate:       "https://kubernetes-release.pek3b.qingstor.com/cri-dockerd/releases/download/v{{.VersionNoV}}/cri-dockerd-{{.VersionNoV}}.{{.Arch}}.tgz",
		FileNameTemplate:    "cri-dockerd-{{.VersionNoV}}.{{.Arch}}.tgz",
		IsArchive:           true,
		DefaultOS:           "linux",
		ComponentNameForDir: "cri-dockerd",
	},
	ComponentCriCtl: {
		BinaryType:       CRICTL,
		URLTemplate:      "https://github.com/kubernetes-sigs/cri-tools/releases/download/{{.Version}}/crictl-{{.Version}}-{{.OS}}-{{.Arch}}.tar.gz",
		CNURLTemplate:    "https://kubernetes-release.pek3b.qingstor.com/cri-tools/releases/download/{{.Version}}/crictl-{{.Version}}-{{.OS}}-{{.Arch}}.tar.gz",
		FileNameTemplate: "crictl-{{.Version}}-{{.OS}}-{{.Arch}}.tar.gz",
		IsArchive:        true,
		DefaultOS:        "linux",
	},
	ComponentK3s: {
		BinaryType:       K3S,
		URLTemplate:      "https://github.com/k3s-io/k3s/releases/download/{{.VersionWithPlus}}/k3s{{.ArchSuffix}}",
		CNURLTemplate:    "https://kubernetes-release.pek3b.qingstor.com/k3s/releases/download/{{.VersionWithPlus}}/linux/{{.Arch}}/k3s",
		FileNameTemplate: "k3s{{.ArchSuffix}}",
		IsArchive:        false,
		DefaultOS:        "linux",
	},
	ComponentK8e: {
		BinaryType:       K8E,
		URLTemplate:      "https://github.com/xiaods/k8e/releases/download/{{.VersionWithPlus}}/k8e{{.ArchSuffix}}",
		CNURLTemplate:    "https://kubernetes-release.pek3b.qingstor.com/k8e/releases/download/{{.VersionWithPlus}}/linux/{{.Arch}}/k8e",
		FileNameTemplate: "k8e{{.ArchSuffix}}",
		IsArchive:        false,
		DefaultOS:        "linux",
	},
	ComponentRegistry: {
		BinaryType:          REGISTRY,
		URLTemplate:         "https://github.com/distribution/distribution/releases/download/v{{.VersionNoV}}/registry-{{.VersionNoV}}-linux-{{.Arch}}.tar.gz",
		CNURLTemplate:       "", // Qingstor does not seem to host official distribution registry
		FileNameTemplate:    "registry-{{.VersionNoV}}-linux-{{.Arch}}.tar.gz",
		IsArchive:           true,
		DefaultOS:           "linux",
		ComponentNameForDir: "registry",
	},
	ComponentHarbor: {
		BinaryType:          REGISTRY,
		URLTemplate:         "https://github.com/goharbor/harbor/releases/download/{{.Version}}/harbor-offline-installer-{{.Version}}.tgz",
		CNURLTemplate:       "https://kubernetes-release.pek3b.qingstor.com/harbor/releases/download/{{.Version}}/harbor-offline-installer-{{.Version}}.tgz",
		FileNameTemplate:    "harbor-offline-installer-{{.Version}}.tgz",
		IsArchive:           true,
		DefaultOS:           "linux",
		ComponentNameForDir: "harbor",
	},
	ComponentCompose: {
		BinaryType:          REGISTRY,
		URLTemplate:         "https://github.com/docker/compose/releases/download/{{.Version}}/docker-compose-{{.OS}}-{{.ArchAlias}}",
		CNURLTemplate:       "https://kubernetes-release.pek3b.qingstor.com/docker/compose/releases/download/{{.Version}}/docker-compose-{{.OS}}-{{.ArchAlias}}",
		FileNameTemplate:    "docker-compose-{{.OS}}-{{.ArchAlias}}",
		IsArchive:           false,
		DefaultOS:           "linux",
		ComponentNameForDir: "compose",
	},
	ComponentContainerd: {
		BinaryType:          CONTAINERD,
		URLTemplate:         "https://github.com/containerd/containerd/releases/download/v{{.VersionNoV}}/containerd-{{.VersionNoV}}-{{.OS}}-{{.Arch}}.tar.gz",
		CNURLTemplate:       "https://kubernetes-release.pek3b.qingstor.com/containerd/containerd/releases/download/v{{.VersionNoV}}/containerd-{{.VersionNoV}}-{{.OS}}-{{.Arch}}.tar.gz",
		FileNameTemplate:    "containerd-{{.VersionNoV}}-{{.OS}}-{{.Arch}}.tar.gz",
		IsArchive:           true,
		DefaultOS:           "linux",
		ComponentNameForDir: "containerd",
	},
	ComponentRunc: {
		BinaryType:          RUNC,
		URLTemplate:         "https://github.com/opencontainers/runc/releases/download/{{.Version}}/runc.{{.Arch}}",
		CNURLTemplate:       "https://kubernetes-release.pek3b.qingstor.com/opencontainers/runc/releases/download/{{.Version}}/runc.{{.Arch}}",
		FileNameTemplate:    "runc.{{.Arch}}",
		IsArchive:           false,
		DefaultOS:           "linux",
		ComponentNameForDir: "runc",
	},
	ComponentCalicoCtl: {
		BinaryType:       CALICOCTL,
		URLTemplate:      "https://github.com/projectcalico/calico/releases/download/{{.Version}}/calicoctl-{{.OS}}-{{.Arch}}",
		CNURLTemplate:    "https://kubernetes-release.pek3b.qingstor.com/projectcalico/calico/releases/download/{{.Version}}/calicoctl-{{.OS}}-{{.Arch}}",
		FileNameTemplate: "calicoctl-{{.OS}}-{{.Arch}}",
		IsArchive:        false,
		DefaultOS:        "linux",
	},
	ComponentBuildx: {
		BinaryType:       BUILD,
		URLTemplate:      "https://github.com/docker/buildx/releases/download/{{.Version}}/buildx-{{.Version}}.{{.OS}}-{{.Arch}}",
		CNURLTemplate:    "https://kubernetes-release.pek3b.qingstor.com/docker/buildx/releases/download/{{.Version}}/buildx-{{.Version}}.{{.OS}}-{{.Arch}}",
		FileNameTemplate: "buildx-{{.Version}}.{{.OS}}-{{.Arch}}",
		IsArchive:        false,
		DefaultOS:        "linux",
	},
}
